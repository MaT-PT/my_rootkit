#!/bin/bash

DIR="$(dirname -- "$0")"

if [ -z "$SRC_DIR" ]; then
    SRC_DIR="$(realpath "$DIR/../src" --relative-to="$PWD")"
fi

if [ ! -d "$SRC_DIR" ]; then
    echo "Error: $SRC_DIR is not a directory" >&2
    exit 1
fi

if [ -n "$1" ]; then
    SYSCALLS_H="$1"
else
    SYSCALLS_H="$SRC_DIR/inc/hooked_syscalls.h"
fi

echo "Generating '$SYSCALLS_H'..." >&2
echo "* Using '$SRC_DIR' as source directory" >&2
echo >&2

list="$(grep -rPoIz --include='*.c' 'SYSCALL_HOOK_HANDLER[0-6]\(\s*\K\w+' "$SRC_DIR" | tr '\0' '\n')"

files=$(echo "$list" | cut -d: -f1 | uniq | xargs -I{} basename -- '{}')

cat << EOF > "$SYSCALLS_H"
/* This file is automatically generated by scripts/gen-syscall-list. Do not edit. */

/* All hooked syscalls */
#define HOOKED_SYSCALLS \\
EOF

for file in $files; do
    echo "Processing '$file'..." >&2
    syscalls=$(echo "$list" | grep "$file:" | cut -d: -f2 | tr '\n' ',' | sed 's/,/, /g')
    echo "$syscalls/* $file */ \\"
    echo "$syscalls" | sed 's/, /\n/g' | sed '$d' | sed 's/^/  * /' >&2
done | sed '$s@, /\*@ /*@' | sed '$s/\s*\\$//g' >> "$SYSCALLS_H"

if command -v clang-format &>/dev/null; then
    clang-format -i --style="file:$DIR/../.clang-format" -- "$SYSCALLS_H"
fi
